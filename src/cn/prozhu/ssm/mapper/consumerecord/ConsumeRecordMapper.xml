<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.prozhu.ssm.mapper.consumerecord.ConsumeRecordMapper" >
  <resultMap id="BaseResultMap" type="cn.prozhu.ssm.model.consumerecord.ConsumeRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="memberId" property="memberId" jdbcType="VARCHAR" />
    <result column="memberCardId" property="memberCardId" jdbcType="VARCHAR" />
    <result column="discountMoney" property="discountMoney" jdbcType="DECIMAL" />
    <result column="consumeMoney" property="consumeMoney" jdbcType="DECIMAL" />
    <result column="memberName" property="memberName" jdbcType="VARCHAR" />
    <result column="consumeTime" property="consumeTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberId, memberCardId, discountMoney, consumeMoney, memberName, consumeTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consumerecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from consumerecord
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from consumerecord
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecordExample" >
    delete from consumerecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecord" >
    insert into consumerecord (id, memberId, memberCardId, 
      discountMoney, consumeMoney, memberName, consumeTime
      )
    values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=VARCHAR}, #{memberCardId,jdbcType=VARCHAR}, 
      #{discountMoney,jdbcType=DECIMAL}, #{consumeMoney,jdbcType=DECIMAL}, 
      #{memberName,jdbcType=VARCHAR}, #{consumeTime,jdbcType=TIMESTAMP}
      )
      
  </insert>
  <insert id="insertSelective" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecord" >
    insert into consumerecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        memberId,
      </if>
      <if test="memberCardId != null" >
        memberCardId,
      </if>
       <if test="discountMoney != null" >
        discountMoney,
      </if>
      <if test="consumeMoney != null" >
        consumeMoney,
      </if>
      <if test="memberName != null" >
        memberName,
      </if>
      <if test="consumeTime != null" >
        consumeTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberCardId != null" >
        #{memberCardId,jdbcType=VARCHAR},
      </if>
      <if test="discountMoney != null" >
        #{discountMoney,jdbcType=DECIMAL},
      </if>
      <if test="consumeMoney != null" >
        #{consumeMoney,jdbcType=DECIMAL},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="consumeTime != null" >
        #{consumeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecordExample" resultType="java.lang.Integer" >
    select count(*) from consumerecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update consumerecord
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberId != null" >
        memberId = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberCardId != null" >
        memberCardId = #{record.memberCardId,jdbcType=VARCHAR},
      </if>
      <if test="record.discountMoney != null" >
        discountMoney = #{record.discountMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.consumeMoney != null" >
        consumeMoney = #{record.consumeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.memberName != null" >
        memberName = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeTime != null" >
        consumeTime = #{record.consumeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update consumerecord
    set id = #{record.id,jdbcType=BIGINT},
      memberId = #{record.memberId,jdbcType=VARCHAR},
      memberCardId = #{record.memberCardId,jdbcType=VARCHAR},
      discountMoney = #{record.discountMoney,jdbcType=DECIMAL},
      consumeMoney = #{record.consumeMoney,jdbcType=DECIMAL},
      memberName = #{record.memberName,jdbcType=VARCHAR},
      consumeTime = #{record.consumeTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecord" >
    update consumerecord
    <set >
      <if test="memberId != null" >
        memberId = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberCardId != null" >
        memberCardId = #{memberCardId,jdbcType=VARCHAR},
      </if>
      <if test="discountMoney != null" >
        discountMoney = #{discountMoney,jdbcType=DECIMAL},
      </if>
      <if test="consumeMoney != null" >
        consumeMoney = #{consumeMoney,jdbcType=DECIMAL},
      </if>
      <if test="memberName != null" >
        memberName = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="consumeTime != null" >
        consumeTime = #{consumeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecord" >
    update consumerecord
    set memberId = #{memberId,jdbcType=VARCHAR},
      memberCardId = #{memberCardId,jdbcType=VARCHAR},
      discountMoney = #{discountMoney,jdbcType=DECIMAL},
      consumeMoney = #{consumeMoney,jdbcType=DECIMAL},
      memberName = #{memberName,jdbcType=VARCHAR},
      consumeTime = #{consumeTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="cn.prozhu.ssm.model.consumerecord.ConsumeRecordExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consumerecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="consumeChartByYear" resultType="java.util.Map">
    select year(consumeTime) as 'year' , sum(consumeMoney) as 'money' from consumerecord  group by  year(consumeTime)
  </select>
  
    <select id="consumeChartByQuarter" parameterType="String" resultType="java.util.Map">
	    select  quarter(consumeTime) as 'quarter',sum(consumeMoney) as 'money' from consumerecord where
	       <if test="markYear != '' ">
	           year(consumeTime)=#{markYear}
	       </if>
	       <if test=" markYear == '' ">
	           year(consumeTime)=year(now()) 
	       </if>
	     group by  quarter(consumeTime)
  </select>
  
    <select id="consumeChartByMonth"  parameterType="String" resultType="java.util.Map">
    select  month(consumeTime) as 'month',sum(consumeMoney) as 'money' from consumerecord where
       <if test="markYear != ''">
               year(consumeTime) = #{markYear}
           </if>
           <if test="markYear == '' ">
               year(consumeTime)=year(now()) 
           </if>
     group by  month(consumeTime)
  </select>
  
  <select id="selectYears" resultType = "java.lang.String">
        select distinct year(consumeTime) as 'year'  from consumerecord order by year(consumeTime) asc
  </select>
  
  <select id="consumeChartByWeek" resultType = "java.util.Map">
		SELECT 
		  DATE_FORMAT(consumeTime, '%Y-%m-%d') AS times,
		  SUM(consumeMoney) AS 'money' 
		FROM
		  consumerecord 
		WHERE consumeTime <![CDATA[  >=  ]]> DATE_SUB(
		    #{time},
		    INTERVAL WEEKDAY(#{time}) DAY
		  ) 
		  AND  consumeTime <![CDATA[   <=  ]]>  DATE_ADD(
		    DATE_SUB(
		      #{time},
		      INTERVAL WEEKDAY(#{time}) DAY
		    ),
		    INTERVAL 7 DAY
		  ) 
		GROUP BY times 
		ORDER BY times
  </select>
  
  
</mapper>