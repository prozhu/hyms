<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.ssm.mapper.member.MemberMapper" >
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.model.member.Member" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="memberId" property="memberid" jdbcType="VARCHAR" />
    <result column="memberName" property="membername" jdbcType="VARCHAR" />
    <result column="loginName" property="loginname" jdbcType="VARCHAR" />
    <result column="loginPwd" property="loginpwd" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="memberType" property="membertype" jdbcType="CHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="registertime" property="registertime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="SMALLINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberId, memberName, loginName, loginPwd, sex, phone, remark, memberType, age, 
    registertime, state, email
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.itcast.ssm.model.member.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.model.member.MemberExample" >
    delete from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.model.member.Member" >
    insert into member (id, memberId, memberName, 
      loginName, loginPwd, sex, 
      phone, remark, memberType, 
      age, registertime, state, 
      email)
    values (#{id,jdbcType=BIGINT}, #{memberid,jdbcType=VARCHAR}, #{membername,jdbcType=VARCHAR}, 
      #{loginname,jdbcType=VARCHAR}, #{loginpwd,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{membertype,jdbcType=CHAR}, 
      #{age,jdbcType=INTEGER}, #{registertime,jdbcType=TIMESTAMP}, #{state,jdbcType=SMALLINT}, 
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.model.member.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="membername != null" >
        memberName,
      </if>
      <if test="loginname != null" >
        loginName,
      </if>
      <if test="loginpwd != null" >
        loginPwd,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="membertype != null" >
        memberType,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="registertime != null" >
        registertime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="membername != null" >
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null" >
        #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="membertype != null" >
        #{membertype,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="registertime != null" >
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=SMALLINT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.model.member.MemberExample" resultType="java.lang.Integer" >
    select count(*) from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=VARCHAR},
      </if>
      <if test="record.membername != null" >
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.loginname != null" >
        loginName = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.loginpwd != null" >
        loginPwd = #{record.loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.membertype != null" >
        memberType = #{record.membertype,jdbcType=CHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.registertime != null" >
        registertime = #{record.registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=SMALLINT},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member
    set id = #{record.id,jdbcType=BIGINT},
      memberId = #{record.memberid,jdbcType=VARCHAR},
      memberName = #{record.membername,jdbcType=VARCHAR},
      loginName = #{record.loginname,jdbcType=VARCHAR},
      loginPwd = #{record.loginpwd,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      memberType = #{record.membertype,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      registertime = #{record.registertime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=SMALLINT},
      email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.model.member.Member" >
    update member
    <set >
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="membername != null" >
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null" >
        loginPwd = #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="membertype != null" >
        memberType = #{membertype,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="registertime != null" >
        registertime = #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=SMALLINT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.model.member.Member" >
    update member
    set memberId = #{memberid,jdbcType=VARCHAR},
      memberName = #{membername,jdbcType=VARCHAR},
      loginName = #{loginname,jdbcType=VARCHAR},
      loginPwd = #{loginpwd,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      memberType = #{membertype,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      registertime = #{registertime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=SMALLINT},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="cn.itcast.ssm.model.member.MemberExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>